# Generated by Django 2.2.3 on 2019-07-25 19:58

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ('WineApp', '0002_auto_20190725_1616'),
    ]

    operations = [
        migrations.CreateModel(
            name='DailySensorData',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('pressureAvg', models.FloatField()),
                ('pressureMax', models.FloatField()),
                ('pressureMaxTime', models.TimeField()),
                ('pressureMin', models.FloatField()),
                ('pressureMinTime', models.TimeField()),
                ('windDirectionAvg', models.FloatField()),
                ('windDirectionMax', models.FloatField()),
                ('windDirectionMaxTime', models.TimeField()),
                ('windDirectionMin', models.FloatField()),
                ('windDirectionMinTime', models.TimeField()),
                ('upperLeafWetnessAvg', models.FloatField()),
                ('upperLeafWetnessMax', models.FloatField()),
                ('upperLeafWetnessMaxTime', models.TimeField()),
                ('upperLeafWetnessMin', models.FloatField()),
                ('upperLeafWetnessMinTime', models.TimeField()),
                ('lowerLeafWetnessAvg', models.FloatField()),
                ('lowerLeafWetnessMax', models.FloatField()),
                ('lowerLeafWetnessMaxTime', models.TimeField()),
                ('lowerLeafWetnessMin', models.FloatField()),
                ('lowerLeafWetnessMinTime', models.TimeField()),
                ('solarRadiationAvg', models.FloatField()),
                ('solarRadiationMax', models.FloatField()),
                ('solarRadiationMaxTime', models.TimeField()),
                ('solarRadiationMin', models.FloatField()),
                ('solarRadiationMinTime', models.TimeField()),
                ('windSpeedAvg', models.FloatField()),
                ('windSpeedMax', models.FloatField()),
                ('windSpeedMaxTime', models.TimeField()),
                ('windSpeedMin', models.FloatField()),
                ('windSpeedMinTime', models.TimeField()),
                ('airTemperatureAvg', models.FloatField()),
                ('airTemperatureMax', models.FloatField()),
                ('airTemperatureMaxTime', models.TimeField()),
                ('airTemperatureMin', models.FloatField()),
                ('airTemperatureMinTime', models.TimeField()),
                ('airHumidityAvg', models.FloatField()),
                ('airHumidityMax', models.FloatField()),
                ('airHumidityMaxTime', models.TimeField()),
                ('airHumidityMin', models.FloatField()),
                ('airHumidityMinTime', models.TimeField()),
                ('rainAvg', models.FloatField()),
                ('rainMax', models.FloatField()),
                ('rainMaxTime', models.TimeField()),
                ('rainMin', models.FloatField()),
                ('rainMinTime', models.TimeField()),
                ('rainTot', models.FloatField()),
                ('gustOfWindAvg', models.FloatField()),
                ('gustOfWindMax', models.FloatField()),
                ('gustOfWindMaxTime', models.TimeField()),
                ('gustOfWindMin', models.FloatField()),
                ('gustOfWindMinTime', models.TimeField()),
                ('dewPointAvg', models.FloatField()),
                ('dewPointMax', models.FloatField()),
                ('dewPointMaxTime', models.TimeField()),
                ('dewPointMin', models.FloatField()),
                ('dewPointMinTime', models.TimeField()),
                ('ETTot', models.FloatField()),
                ('groundTemperatureAvg', models.FloatField()),
                ('groundTemperatureMax', models.FloatField()),
                ('groundTemperatureMaxTime', models.TimeField()),
                ('groundTemperatureMin', models.FloatField()),
                ('groundTemperatureMinTime', models.TimeField()),
                ('groundHumidityAvg', models.FloatField()),
                ('groundHumidityMax', models.FloatField()),
                ('groundHumidityMaxTime', models.TimeField()),
                ('groundHumidityMin', models.FloatField()),
                ('groundHumidityMinTime', models.TimeField()),
            ],
        ),
    ]
